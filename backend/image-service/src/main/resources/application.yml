server:
  port: ${IMAGE_SERVICE_PORT:80}

spring:
  application:
    name: image-service

  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      retries: 3
      acks: all
    consumer:
      group-id: image-service
      auto-offset-reset: earliest
    properties:
      security.protocol: SASL_SSL
      sasl.mechanism: PLAIN
      sasl.jaas.config: "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"$ConnectionString\" password=\"${KAFKA_PASSWORD}\";"

  servlet:
    multipart:
      max-file-size: 1MB
      max-request-size: 50MB

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${OIDC_ISSUER_URI:http://localhost:8080/realms/ecommerce}

keycloak:
  auth-server-url: ${AUTH_SERVER_URL:http://localhost:8080/realms/ecommerce}
  realm: ${KEYCLOAK_REALM:ecommerce}
  resource: ${IMAGE-SERVICE-KEYCLOAK_CLIENT_ID:image-service}
  public-client: false
  credentials:
    secret: ${IMAGE_SERVICE_KEYCLOAK_SECRET}


eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8761/eureka/}
    register-with-eureka: true
    fetch-registry: true

  instance:
    prefer-ip-address: true

azure:
  blob:
    connection-string: ${AZURE_STORAGE_CONNECTION_STRING}