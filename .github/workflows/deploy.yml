name: Build and Push Docker Images

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ service-registry, api-gateway, product-service, user-service, image-service, review-service ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Install Maven
        run: |
          sudo apt-get update
          sudo apt-get install maven -y

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Build parent multi\-module project
        run: |
          cd backend
          mvn clean install -DskipTests

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Generate tag name
        id: tag_name
        run: echo "TAG_NAME=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Build and push Docker image for ${{ matrix.service }}
        run: |
          cd backend/${{ matrix.service }}
          mvn compile jib:build -Dimage=adelinv2/react-spring-ecommerce.${{ matrix.service }}:${{ env.TAG_NAME }}


#                 Deploy to Azure canceled

#name: Deploy to Azure Spring Apps
#
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  build-and-deploy:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          distribution: 'temurin'
#          java-version: '17'
#
#      - name: Filter service changes
#        id: filter
#        uses: dorny/paths-filter@v3
#        with:
#          filters: |
#            api-gateway: 'backend/api-gateway/**'
#            service-registry: 'backend/service-registry/**'
#            product-service: 'backend/product-service/**'
#            user-service: 'backend/user-service/**'
#            image-service: 'backend/image-service/**'
#
#      - name: Login to Azure
#        uses: azure/login@v2
#        with:
#          creds: ${{ secrets.AZURE_CREDENTIALS }}
#
#      - name: Build service-registry
#        if: steps.filter.outputs.service-registry == 'true'
#        run: |
#          cd backend/service-registry
#          mvn clean install -DskipTests
#
#      - name: Build api-gateway
#        if: steps.filter.outputs.api-gateway == 'true'
#        run: |
#          cd backend/api-gateway
#          mvn clean install -DskipTests
#
#      - name: Build product-service
#        if: steps.filter.outputs.product-service == 'true'
#        run: |
#          cd backend/product-service
#          mvn clean install -DskipTests
#
#      - name: Build user-service
#        if: steps.filter.outputs.user-service == 'true'
#        run: |
#          cd backend/user-service
#          mvn clean install -DskipTests
#
#      - name: Build image-service
#        if: steps.filter.outputs.image-service == 'true'
#        run: |
#          cd backend/image-service
#          mvn clean install -DskipTests
#
#      - name: Deploy Service Discovery
#        if: steps.filter.outputs.service-registry == 'true'
#        run: |
#          az spring app deploy --name service-registry \
#            --service ${{ secrets.AZURE_SPRING_APPS_NAME }} \
#            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
#            --artifact-path backend/service-registry/target/service-registry-0.0.1-SNAPSHOT.jar
#
#      - name: Deploy API Gateway
#        if: steps.filter.outputs.api-gateway == 'true'
#        run: |
#          az spring app deploy --name api-gateway \
#            --service ${{ secrets.AZURE_SPRING_APPS_NAME }} \
#            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
#            --artifact-path backend/api-gateway/target/api-gateway-0.0.1-SNAPSHOT.jar
#
#      - name: Deploy Product Service
#        if: steps.filter.outputs.product-service == 'true'
#        run: |
#          az spring app deploy --name product-service \
#            --service ${{ secrets.AZURE_SPRING_APPS_NAME }} \
#            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
#            --artifact-path backend/product-service/target/product-service-0.0.1-SNAPSHOT.jar
#
#      - name: Deploy User Service
#        if: steps.filter.outputs.user-service == 'true'
#        run: |
#          az spring app deploy --name user-service \
#            --service ${{ secrets.AZURE_SPRING_APPS_NAME }} \
#            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
#            --artifact-path backend/user-service/target/user-service-0.0.1-SNAPSHOT.jar
#
#      - name: Deploy Image Service
#        if: steps.filter.outputs.image-service == 'true'
#        run: |
#          az spring app deploy --name image-service \
#            --service ${{ secrets.AZURE_SPRING_APPS_NAME }} \
#            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
#            --artifact-path backend/image-service/target/image-service-0.0.1-SNAPSHOT.jar
